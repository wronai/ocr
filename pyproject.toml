
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf_processor"
version = "2.0.0"
authors = [
  {name = "PDF OCR Processor Team", email = "team@pdf-ocr-processor.com"},
]
description = "Advanced PDF OCR processing with AI-powered text extraction"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Text Processing :: Markup",
    "Topic :: Utilities",
]
keywords = ["pdf", "ocr", "text-extraction", "ai", "ollama", "document-processing"]
dependencies = [
    "PyMuPDF>=1.23.0",
    "Pillow>=10.0.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.1",
    "tqdm>=4.66.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
gpu = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
]
web = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "streamlit>=1.25.0",
]
performance = [
    "psutil>=5.9.0",
    "memory-profiler>=0.61.0",
]

[project.urls]
Homepage = "https://github.com/your-repo/pdf-ocr-processor"
Documentation = "https://pdf-ocr-processor.readthedocs.io/"
Repository = "https://github.com/your-repo/pdf-ocr-processor.git"
"Bug Reports" = "https://github.com/your-repo/pdf-ocr-processor/issues"
Changelog = "https://github.com/your-repo/pdf-ocr-processor/blob/main/CHANGELOG.md"

[project.scripts]
pdf_ocr = "pdf_processor:main"
# Uncomment and implement when web interface is ready
# pdf_ocr_web = "pdf_processor.web:main"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fitz.*",
    "PIL.*",
    "tqdm.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["pdf_processor"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "venv"]
skips = ["B101", "B601"]
